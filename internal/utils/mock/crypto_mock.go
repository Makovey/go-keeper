// Code generated by MockGen. DO NOT EDIT.
// Source: crypto.go

// Package mock is a generated GoMock package.
package mock

import (
	bufio "bufio"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCrypto is a mock of Crypto interface.
type MockCrypto struct {
	ctrl     *gomock.Controller
	recorder *MockCryptoMockRecorder
}

// MockCryptoMockRecorder is the mock recorder for MockCrypto.
type MockCryptoMockRecorder struct {
	mock *MockCrypto
}

// NewMockCrypto creates a new mock instance.
func NewMockCrypto(ctrl *gomock.Controller) *MockCrypto {
	mock := &MockCrypto{ctrl: ctrl}
	mock.recorder = &MockCryptoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCrypto) EXPECT() *MockCryptoMockRecorder {
	return m.recorder
}

// DecryptString mocks base method.
func (m *MockCrypto) DecryptString(text, secret string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecryptString", text, secret)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecryptString indicates an expected call of DecryptString.
func (mr *MockCryptoMockRecorder) DecryptString(text, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecryptString", reflect.TypeOf((*MockCrypto)(nil).DecryptString), text, secret)
}

// EncryptReader mocks base method.
func (m *MockCrypto) EncryptReader(reader *bufio.Reader, secret string) (*bufio.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncryptReader", reader, secret)
	ret0, _ := ret[0].(*bufio.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EncryptReader indicates an expected call of EncryptReader.
func (mr *MockCryptoMockRecorder) EncryptReader(reader, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncryptReader", reflect.TypeOf((*MockCrypto)(nil).EncryptReader), reader, secret)
}

// EncryptString mocks base method.
func (m *MockCrypto) EncryptString(text, secret string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncryptString", text, secret)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EncryptString indicates an expected call of EncryptString.
func (mr *MockCryptoMockRecorder) EncryptString(text, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncryptString", reflect.TypeOf((*MockCrypto)(nil).EncryptString), text, secret)
}
